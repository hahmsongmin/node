const fs = require('fs');
const path = require('path');

// 3 가지 형태의 api
// rename(...., callback(error, data)) <= 비동기
// try { renameSync(....) } catch(e) { } <= 동기 (try catch 로 프로그래밍 죽는 걸 방지)
// promise.rename().then().catch(0)

// try {
//   fs.renameSync(`${__dirname}/text.txt`, `${__dirname}/text-new.txt`);
// } catch (e) {
//   console.error(e);
// }

// fs.rename(
//   `${path.join(path.basename(__dirname), 'text-new.txt')}`,
//   `${path.join(path.basename(__dirname), 'text.txt')}`,
//   (error) => {
//     console.log(error);
//   }
// );

fs.promises
  .rename(
    `${path.join(path.basename(__dirname), 'text.txt')}`,
    `${path.join(path.basename(__dirname), 'text-new.txt')}`
  ) //
  .then(() => console.log('Done!'))
  .catch(console.error);
