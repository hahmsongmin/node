// 버퍼 : 고정된 사이즈의 메모리 덩어리
// 숫자의 배열이다.

// 만약 정의부분으로 넘어갈 수 없다면 Node라는 것을 모르는 것이므로
// const fs = require("fs") 선언 (node와 관련된 api import하면 됨)

const fs = require("fs");

const buf = Buffer.from("Hi");
console.log(buf); // 유니코드
console.log(buf.length);
console.log(buf[0]); // 아스키 코드
console.log(buf[1]);

console.log(buf.toString()); // toString('utf-8') defualt 값

// create 버퍼 만들기
const buf2 = Buffer.alloc(2); // 메모리에서 사용가능한 덩어리를 찾아서 초기화해서 가져옴
const buf3 = Buffer.allocUnsafe(2); // 초기화하지 않고 가져옴(대신빠름) 하지만 쓰레기값이 있을 수 있음
buf2[0] = 72;
buf2[1] = 105;
console.log(buf2.toString());
buf2.copy(buf3);
console.log(buf3.toString());

// concat 버퍼를 묶어줄 수 있음
const newBuf = Buffer.concat([buf, buf2, buf3]);
console.log(newBuf.toString());
